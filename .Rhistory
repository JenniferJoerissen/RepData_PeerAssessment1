#Delete rows with missing values
completedMeasurements<- activity[complete.cases(activity),]
#Calculate total steps for each day
sum <-aggregate(completedMeasurements$steps, list(date=completedMeasurements$date), sum)
#Plot as histogram
library(ggplot2)
q <- qplot(sum$date, sum$x, geom="bar", stat="identity", xlab = "", ylab = "steps", main = "Steps per Day")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Calculate mean and median of steps taken per day
mean(sum$x)
median(sum$x)
###What is the average daily activity pattern?###
##Time series plot of 5-minute interval vs average number of steps take
#Calculate the average steps for each time interval
meanSteps <- numeric()
for(i in seq(0,2355,5)){
specificInterval <- activity[activity$interval == i,]
meanSteps <- c(meanSteps, mean(specificInterval$steps, na.rm = TRUE))
}
#Delete NAs
meanSteps <- meanSteps[complete.cases(meanSteps)]
#Create a dataframe of intervals and step averages
intervalAverage <- cbind(activity[1:288,3], meanSteps)
colnames(intervalAverage) <- c("interval", "meanSteps")
intervalAverage<- data.frame(intervalAverage)
#Plot 5-minute interval vs average steps
plot(intervalAverage$interval, intervalAverage$meanSteps, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps")
#Which 5-minute interval contains the maximum number of steps?
intervalAverage[intervalAverage$meanSteps == max(intervalAverage$meanSteps),]
###Imputing missing values
#Calculate and report the total number of missing values in the dataset
sum(is.na(activity$steps))
###Create a new dataset that is equal to the original dataset but with the missing data ï¬lled in
#Make a copy of your activity dataframe
activityNoNA = activity
#Replace all NA step values with the average value for the respective interval
for (i in 1:length(activityNoNA$steps)){
row <- activityNoNA[i,]
if (is.na(row$steps)){
activityNoNA[i,1] = intervalAverage$meanSteps[intervalAverage$interval == row$interval]
}
}
#Histogram of the total number of steps taken each day.
totalStepsPerDay <- aggregate(activityNoNA$steps, list(date=activityNoNA$date), sum)
library(ggplot2)
q <- qplot(totalStepsPerDay$date, totalStepsPerDay$x, geom="bar", stat="identity", xlab = "", ylab = "steps", main = "Steps per Day")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Mean and median total number of steps taken per day
mean(totalStepsPerDay$x)
median(totalStepsPerDay$x)
###Are there differences in activity patterns between weekdays and weekends?
#Coerce date column to a POSIX object and add a column for the weekday to the dataframe
activityNoNA$date <- strptime(activityNoNA$date, format="%Y-%m-%d")
activityNoNA$partOfWeek <- weekdays(activityNoNA$date)
View(activityNoNA)
activityNoNA[1,4]
length(activityNoNA)
length(activityNoNA$steps)
for (i in 1:length(activityNoNA$steps)){
if ((activityNoNA[i,4] == "Saturday") || (activityNoNA[i,4] == "Sunday")){
activityNoNA[i,4] <- "weekend"
}
else{
activityNoNA[i,4] <- "weekday"
}
}
View(activityNoNA)
activityNoNA[1001:2000,4]
###What is mean total number of steps taken per day?###
#Unzip and read in data
setwd("~/R/Reproducible Research/RepData_PeerAssessment1")
unzip("activity.zip")
activity <- read.csv("activity.csv")
#Delete rows with missing values
completedMeasurements<- activity[complete.cases(activity),]
#Calculate total steps for each day
sum <-aggregate(completedMeasurements$steps, list(date=completedMeasurements$date), sum)
#Plot as histogram
library(ggplot2)
q <- qplot(sum$date, sum$x, geom="bar", stat="identity", xlab = "", ylab = "steps", main = "Steps per Day")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Calculate mean and median of steps taken per day
mean(sum$x)
median(sum$x)
###What is the average daily activity pattern?###
##Time series plot of 5-minute interval vs average number of steps take
#Calculate the average steps for each time interval
meanSteps <- numeric()
for(i in seq(0,2355,5)){
specificInterval <- activity[activity$interval == i,]
meanSteps <- c(meanSteps, mean(specificInterval$steps, na.rm = TRUE))
}
#Delete NAs
meanSteps <- meanSteps[complete.cases(meanSteps)]
#Create a dataframe of intervals and step averages
intervalAverage <- cbind(activity[1:288,3], meanSteps)
colnames(intervalAverage) <- c("interval", "meanSteps")
intervalAverage<- data.frame(intervalAverage)
#Plot 5-minute interval vs average steps
plot(intervalAverage$interval, intervalAverage$meanSteps, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps")
#Which 5-minute interval contains the maximum number of steps?
intervalAverage[intervalAverage$meanSteps == max(intervalAverage$meanSteps),]
###Imputing missing values
#Calculate and report the total number of missing values in the dataset
sum(is.na(activity$steps))
###Create a new dataset that is equal to the original dataset but with the missing data ï¬lled in
#Make a copy of your activity dataframe
activityNoNA = activity
#Replace all NA step values with the average value for the respective interval
for (i in 1:length(activityNoNA$steps)){
row <- activityNoNA[i,]
if (is.na(row$steps)){
activityNoNA[i,1] = intervalAverage$meanSteps[intervalAverage$interval == row$interval]
}
}
#Histogram of the total number of steps taken each day.
totalStepsPerDay <- aggregate(activityNoNA$steps, list(date=activityNoNA$date), sum)
library(ggplot2)
q <- qplot(totalStepsPerDay$date, totalStepsPerDay$x, geom="bar", stat="identity", xlab = "", ylab = "steps", main = "Steps per Day")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Mean and median total number of steps taken per day
mean(totalStepsPerDay$x)
median(totalStepsPerDay$x)
###Are there differences in activity patterns between weekdays and weekends?
#Coerce date column to a POSIX object and add a column for the weekday to the dataframe
activityNoNA$date <- strptime(activityNoNA$date, format="%Y-%m-%d")
activityNoNA$partOfWeek <- weekdays(activityNoNA$date)
(activityNoNA[i,4] == "Saturday") | (activityNoNA[i,4] == "Sunday")
View(activityNoNA)
Sys.setlocale(category = "LC_TIME", locale = "C")
setwd("~/R/Reproducible Research/RepData_PeerAssessment1")
unzip("activity.zip")
activity <- read.csv("activity.csv")
#Delete rows with missing values
completedMeasurements<- activity[complete.cases(activity),]
#Calculate total steps for each day
sum <-aggregate(completedMeasurements$steps, list(date=completedMeasurements$date), sum)
#Plot as histogram
library(ggplot2)
q <- qplot(sum$date, sum$x, geom="bar", stat="identity", xlab = "", ylab = "steps", main = "Steps per Day")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Calculate mean and median of steps taken per day
mean(sum$x)
median(sum$x)
###What is the average daily activity pattern?###
##Time series plot of 5-minute interval vs average number of steps take
#Calculate the average steps for each time interval
meanSteps <- numeric()
for(i in seq(0,2355,5)){
specificInterval <- activity[activity$interval == i,]
meanSteps <- c(meanSteps, mean(specificInterval$steps, na.rm = TRUE))
}
#Delete NAs
meanSteps <- meanSteps[complete.cases(meanSteps)]
#Create a dataframe of intervals and step averages
intervalAverage <- cbind(activity[1:288,3], meanSteps)
colnames(intervalAverage) <- c("interval", "meanSteps")
intervalAverage<- data.frame(intervalAverage)
#Plot 5-minute interval vs average steps
plot(intervalAverage$interval, intervalAverage$meanSteps, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps")
#Which 5-minute interval contains the maximum number of steps?
intervalAverage[intervalAverage$meanSteps == max(intervalAverage$meanSteps),]
###Imputing missing values
#Calculate and report the total number of missing values in the dataset
sum(is.na(activity$steps))
###Create a new dataset that is equal to the original dataset but with the missing data ï¬lled in
#Make a copy of your activity dataframe
activityNoNA = activity
#Replace all NA step values with the average value for the respective interval
for (i in 1:length(activityNoNA$steps)){
row <- activityNoNA[i,]
if (is.na(row$steps)){
activityNoNA[i,1] = intervalAverage$meanSteps[intervalAverage$interval == row$interval]
}
}
#Histogram of the total number of steps taken each day.
totalStepsPerDay <- aggregate(activityNoNA$steps, list(date=activityNoNA$date), sum)
library(ggplot2)
q <- qplot(totalStepsPerDay$date, totalStepsPerDay$x, geom="bar", stat="identity", xlab = "", ylab = "steps", main = "Steps per Day")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Mean and median total number of steps taken per day
mean(totalStepsPerDay$x)
median(totalStepsPerDay$x)
###Are there differences in activity patterns between weekdays and weekends?
#Coerce date column to a POSIX object and add a column for the weekday to the dataframe
activityNoNA$date <- strptime(activityNoNA$date, format="%Y-%m-%d")
activityNoNA$partOfWeek <- weekdays(activityNoNA$date)
#Replace all "Saturday" and "Sunday" with "weekend" and all other days with "weekday" and coerce to factors.
for (i in 1:length(activityNoNA$steps)){
if ((activityNoNA[i,4] == "Saturday") | (activityNoNA[i,4] == "Sunday")){
activityNoNA[i,4] <- "weekend"
}
else{
activityNoNA[i,4] <- "weekday"
}
}
activityNoNA$partOfWeek <- as.factor(activityNoNA$partOfWeek)
###Panel plot containing a time series plot of the 5-minute interval and the average number of steps taken, averaged across all weekday days or weekend days.
#Split dataframe into two subsets for weekdays and weekends
weekdays <- subset(activityNoNA, activityNoNA$partOfWeek == "weekday")
weekend <- subset(activityNoNA, activityNoNA$partOfWeek == "weekend")
weekend
meanStepsWeekday <- numeric()
for(i in seq(0,2355,5)){
specificInterval <- weekdays[weekdays$interval == i,]
meanStepsWeekday <- c(meanStepsWeekday, mean(specificInterval$steps))
}
meanStepsWeekday <- meanStepsWeekday[complete.cases(meanStepsWeekday)]
intervalAverageWeekday <- cbind(weekdays[1:288,3], meanStepsWeekday)
colnames(intervalAverageWeekday) <- c("interval", "meanSteps")
intervalAverageWeekday<- data.frame(intervalAverageWeekday)
#2. Weekends
meanStepsWeekend <- numeric()
for(i in seq(0,2355,5)){
specificInterval <- weekend[weekend$interval == i,]
meanStepsWeekend <- c(meanStepsWeekend, mean(specificInterval$steps))
}
#meanStepsWeekday <- numeric()
#for(i in seq(0,2355,5)){
#    specificInterval <- weekdays[weekdays$interval == i,]
#    meanStepsWeekday <- c(meanStepsWeekday, mean(specificInterval$steps))
#}
meanStepsWeekend <- meanStepsWeekend[complete.cases(meanStepsWeekend)]
intervalAverageWeekend <- cbind(weekend[1:288,3], meanStepsWeekend)
names(intervalAverageWeekend) <- c("interval", "meanSteps")
intervalAverageWeekend<- data.frame(intervalAverageWeekend)
#3. Plotting
par(mfrow=c(2,1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend")
plot(intervalAverageWeekday$V1, intervalAverageWeekday$meanStepsWeekday, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays")
View(intervalAverageWeekday)
View(intervalAverageWeekend)
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend")
par(mfrow=c(2,1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend")
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend")
intervalAverageWeekday$V1
View(intervalAverageWeekday)
plot(intervalAverageWeekday$interval intervalAverageWeekday$meanStep, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays")
plot(intervalAverageWeekday$interval, intervalAverageWeekday$meanStep, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays")
par(mfrow=c(2,1))
par(mfrow=c(2,1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend")
par(mfrow=c(2,1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend")
plot(intervalAverageWeekday$interval, intervalAverageWeekday$meanStep, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays")
###What is mean total number of steps taken per day?###
#Unzip and read in data
Sys.setlocale(category = "LC_TIME", locale = "C")
setwd("~/R/Reproducible Research/RepData_PeerAssessment1")
unzip("activity.zip")
activity <- read.csv("activity.csv")
#Delete rows with missing values
completedMeasurements<- activity[complete.cases(activity),]
#Calculate total steps for each day
sum <-aggregate(completedMeasurements$steps, list(date=completedMeasurements$date), sum)
#Plot as histogram
library(ggplot2)
q <- qplot(sum$date, sum$x, geom="bar", stat="identity", xlab = "", ylab = "steps", main = "Steps per Day")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Calculate mean and median of steps taken per day
mean(sum$x)
median(sum$x)
###What is the average daily activity pattern?###
##Time series plot of 5-minute interval vs average number of steps take
#Calculate the average steps for each time interval
meanSteps <- numeric()
for(i in seq(0,2355,5)){
specificInterval <- activity[activity$interval == i,]
meanSteps <- c(meanSteps, mean(specificInterval$steps, na.rm = TRUE))
}
#Delete NAs
meanSteps <- meanSteps[complete.cases(meanSteps)]
#Create a dataframe of intervals and step averages
intervalAverage <- cbind(activity[1:288,3], meanSteps)
colnames(intervalAverage) <- c("interval", "meanSteps")
intervalAverage<- data.frame(intervalAverage)
#Plot 5-minute interval vs average steps
plot(intervalAverage$interval, intervalAverage$meanSteps, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps")
#Which 5-minute interval contains the maximum number of steps?
intervalAverage[intervalAverage$meanSteps == max(intervalAverage$meanSteps),]
###Imputing missing values
#Calculate and report the total number of missing values in the dataset
sum(is.na(activity$steps))
###Create a new dataset that is equal to the original dataset but with the missing data ï¬lled in
#Make a copy of your activity dataframe
activityNoNA = activity
#Replace all NA step values with the average value for the respective interval
for (i in 1:length(activityNoNA$steps)){
row <- activityNoNA[i,]
if (is.na(row$steps)){
activityNoNA[i,1] = intervalAverage$meanSteps[intervalAverage$interval == row$interval]
}
}
#Histogram of the total number of steps taken each day.
totalStepsPerDay <- aggregate(activityNoNA$steps, list(date=activityNoNA$date), sum)
library(ggplot2)
q <- qplot(totalStepsPerDay$date, totalStepsPerDay$x, geom="bar", stat="identity", xlab = "", ylab = "steps", main = "Steps per Day")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Mean and median total number of steps taken per day
mean(totalStepsPerDay$x)
median(totalStepsPerDay$x)
###Are there differences in activity patterns between weekdays and weekends?
#Coerce date column to a POSIX object and add a column for the weekday to the dataframe
activityNoNA$date <- strptime(activityNoNA$date, format="%Y-%m-%d")
activityNoNA$partOfWeek <- weekdays(activityNoNA$date)
#Replace all "Saturday" and "Sunday" with "weekend" and all other days with "weekday" and coerce to factors.
for (i in 1:length(activityNoNA$steps)){
if ((activityNoNA[i,4] == "Saturday") | (activityNoNA[i,4] == "Sunday")){
activityNoNA[i,4] <- "weekend"
}
else{
activityNoNA[i,4] <- "weekday"
}
}
activityNoNA$partOfWeek <- as.factor(activityNoNA$partOfWeek)
###Panel plot containing a time series plot of the 5-minute interval and the average number of steps taken, averaged across all weekday days or weekend days.
#Split dataframe into two subsets for weekdays and weekends
weekdays <- subset(activityNoNA, activityNoNA$partOfWeek == "weekday")
weekend <- subset(activityNoNA, activityNoNA$partOfWeek == "weekend")
#1. Weekdays
meanStepsWeekday <- numeric()
for(i in seq(0,2355,5)){
specificInterval <- weekdays[weekdays$interval == i,]
meanStepsWeekday <- c(meanStepsWeekday, mean(specificInterval$steps))
}
meanStepsWeekday <- meanStepsWeekday[complete.cases(meanStepsWeekday)]
intervalAverageWeekday <- cbind(weekdays[1:288,3], meanStepsWeekday)
#colnames(intervalAverageWeekday) <- c("interval", "meanSteps")
intervalAverageWeekday<- data.frame(intervalAverageWeekday)
#2. Weekends
meanStepsWeekend <- numeric()
for(i in seq(0,2355,5)){
specificInterval <- weekend[weekend$interval == i,]
meanStepsWeekend <- c(meanStepsWeekend, mean(specificInterval$steps))
}
#meanStepsWeekday <- numeric()
#for(i in seq(0,2355,5)){
#    specificInterval <- weekdays[weekdays$interval == i,]
#    meanStepsWeekday <- c(meanStepsWeekday, mean(specificInterval$steps))
#}
meanStepsWeekend <- meanStepsWeekend[complete.cases(meanStepsWeekend)]
intervalAverageWeekend <- cbind(weekend[1:288,3], meanStepsWeekend)
#names(intervalAverageWeekend) <- c("interval", "meanSteps")
intervalAverageWeekend<- data.frame(intervalAverageWeekend)
#3. Plotting
par(mfrow=c(2,1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend")
plot(intervalAverageWeekday$V1, intervalAverageWeekday$meanStepsWeekday, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays")
###What is mean total number of steps taken per day?###
#Unzip and read in data
Sys.setlocale(category = "LC_TIME", locale = "C")
setwd("~/R/Reproducible Research/RepData_PeerAssessment1")
unzip("activity.zip")
activity <- read.csv("activity.csv")
#Delete rows with missing values
completedMeasurements<- activity[complete.cases(activity),]
#Calculate total steps for each day
sum <-aggregate(completedMeasurements$steps, list(date=completedMeasurements$date), sum)
#Plot as histogram
library(ggplot2)
q <- qplot(sum$date, sum$x, geom="bar", stat="identity", xlab = "", ylab = "steps", main = "Steps per Day")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Calculate mean and median of steps taken per day
mean(sum$x)
median(sum$x)
###What is the average daily activity pattern?###
##Time series plot of 5-minute interval vs average number of steps take
#Calculate the average steps for each time interval
meanSteps <- numeric()
for(i in seq(0,2355,5)){
specificInterval <- activity[activity$interval == i,]
meanSteps <- c(meanSteps, mean(specificInterval$steps, na.rm = TRUE))
}
#Delete NAs
meanSteps <- meanSteps[complete.cases(meanSteps)]
#Create a dataframe of intervals and step averages
intervalAverage <- cbind(activity[1:288,3], meanSteps)
colnames(intervalAverage) <- c("interval", "meanSteps")
intervalAverage<- data.frame(intervalAverage)
#Plot 5-minute interval vs average steps
plot(intervalAverage$interval, intervalAverage$meanSteps, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps")
#Which 5-minute interval contains the maximum number of steps?
intervalAverage[intervalAverage$meanSteps == max(intervalAverage$meanSteps),]
###Imputing missing values
#Calculate and report the total number of missing values in the dataset
sum(is.na(activity$steps))
###Create a new dataset that is equal to the original dataset but with the missing data ï¬lled in
#Make a copy of your activity dataframe
activityNoNA = activity
#Replace all NA step values with the average value for the respective interval
for (i in 1:length(activityNoNA$steps)){
row <- activityNoNA[i,]
if (is.na(row$steps)){
activityNoNA[i,1] = intervalAverage$meanSteps[intervalAverage$interval == row$interval]
}
}
#Histogram of the total number of steps taken each day.
totalStepsPerDay <- aggregate(activityNoNA$steps, list(date=activityNoNA$date), sum)
library(ggplot2)
q <- qplot(totalStepsPerDay$date, totalStepsPerDay$x, geom="bar", stat="identity", xlab = "", ylab = "steps", main = "Steps per Day")
q + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Mean and median total number of steps taken per day
mean(totalStepsPerDay$x)
median(totalStepsPerDay$x)
###Are there differences in activity patterns between weekdays and weekends?
#Coerce date column to a POSIX object and add a column for the weekday to the dataframe
activityNoNA$date <- strptime(activityNoNA$date, format="%Y-%m-%d")
activityNoNA$partOfWeek <- weekdays(activityNoNA$date)
#Replace all "Saturday" and "Sunday" with "weekend" and all other days with "weekday" and coerce to factors.
for (i in 1:length(activityNoNA$steps)){
if ((activityNoNA[i,4] == "Saturday") | (activityNoNA[i,4] == "Sunday")){
activityNoNA[i,4] <- "weekend"
}
else{
activityNoNA[i,4] <- "weekday"
}
}
activityNoNA$partOfWeek <- as.factor(activityNoNA$partOfWeek)
###Panel plot containing a time series plot of the 5-minute interval and the average number of steps taken, averaged across all weekday days or weekend days.
#Split dataframe into two subsets for weekdays and weekends
weekdays <- subset(activityNoNA, activityNoNA$partOfWeek == "weekday")
weekend <- subset(activityNoNA, activityNoNA$partOfWeek == "weekend")
#1. Weekdays
meanStepsWeekday <- numeric()
for(i in seq(0,2355,5)){
specificInterval <- weekdays[weekdays$interval == i,]
meanStepsWeekday <- c(meanStepsWeekday, mean(specificInterval$steps))
}
meanStepsWeekday <- meanStepsWeekday[complete.cases(meanStepsWeekday)]
intervalAverageWeekday <- cbind(weekdays[1:288,3], meanStepsWeekday)
#colnames(intervalAverageWeekday) <- c("interval", "meanSteps")
intervalAverageWeekday<- data.frame(intervalAverageWeekday)
#2. Weekends
meanStepsWeekend <- numeric()
for(i in seq(0,2355,5)){
specificInterval <- weekend[weekend$interval == i,]
meanStepsWeekend <- c(meanStepsWeekend, mean(specificInterval$steps))
}
#meanStepsWeekday <- numeric()
#for(i in seq(0,2355,5)){
#    specificInterval <- weekdays[weekdays$interval == i,]
#    meanStepsWeekday <- c(meanStepsWeekday, mean(specificInterval$steps))
#}
meanStepsWeekend <- meanStepsWeekend[complete.cases(meanStepsWeekend)]
intervalAverageWeekend <- cbind(weekend[1:288,3], meanStepsWeekend)
#names(intervalAverageWeekend) <- c("interval", "meanSteps")
intervalAverageWeekend<- data.frame(intervalAverageWeekend)
par(mfrow=c(2,1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend")
plot(intervalAverageWeekday$V1, intervalAverageWeekday$meanStepsWeekday, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays")
Sys.setenv(LANG = "en")
?par
par(mfrow=c(2,1), c(5, 4, 4, 2))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend")
plot(intervalAverageWeekday$V1, intervalAverageWeekday$meanStepsWeekday, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays")
par(mfrow=c(2,1), c(4, 4, 3, 1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend")
plot(intervalAverageWeekday$V1, intervalAverageWeekday$meanStepsWeekday, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays")
par(mfrow=c(2,1), c(1, 1, 1, 1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend")
plot(intervalAverageWeekday$V1, intervalAverageWeekday$meanStepsWeekday, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays")
par(mfrow=c(2,1), c(1, 1, 1, 1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend", c(1, 1, 1, 1))
plot(intervalAverageWeekday$V1, intervalAverageWeekday$meanStepsWeekday, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays")
par(mfrow=c(2,1), c(1, 1, 1, 1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend", c(1, 1, 1, 1))
plot(intervalAverageWeekday$V1, intervalAverageWeekday$meanStepsWeekday, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays")
par(mfrow=c(2,1), c(1, 1, 1, 1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend", c(4, 4, 3, 1))
plot(intervalAverageWeekday$V1, intervalAverageWeekday$meanStepsWeekday, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays")
par(mfrow=c(2,1), c(1, 1, 1, 1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend", mar = c(4, 4, 3, 1))
plot(intervalAverageWeekday$V1, intervalAverageWeekday$meanStepsWeekday, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays")
par(mfrow=c(2,1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend", mar = c(4, 4, 3, 1))
plot(intervalAverageWeekday$V1, intervalAverageWeekday$meanStepsWeekday, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays", mar = c(4, 4, 3, 1))
a
a
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend", mar = c(3, 4, 3, 1))
plot(intervalAverageWeekday$V1, intervalAverageWeekday$meanStepsWeekday, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays", mar = c(3, 4, 3, 1))
plot(intervalAverageWeekend$V1, intervalAverageWeekend$meanStepsWeekend, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekend", mar = c(3, 10, 3, 1))
plot(intervalAverageWeekday$V1, intervalAverageWeekday$meanStepsWeekday, type = "l", xlab = "5-Minute Interval", ylab = "Average Steps", main = "Weekdays", mar = c(3, 10, 3, 1))
par(mfrow=c(2,1), c(4, 4, 3, 1))
?panel
??panel
allData <- rbind(intervalAverageWeekend, intervalAverageWeekday)
rbind(intervalAverageWeekend, intervalAverageWeekday)
?rbind
View(intervalAverageWeekday)
View(intervalAverageWeekend)
str(interval_plot_full)
intervalAverageWeekend$partOfWeek <- "weekend"
View(intervalAverageWeekend)
intervalAverageWeekend$partOfWeek <- "weekend"
intervalAverageWeekday$partOfWeek <- "weekday"
View(intervalAverage)
View(intervalAverageWeekday)
View(intervalAverageWeekend)
names(intervalAverageWeekend) <- c("interval", "meanSteps", "partOfWeek")
names(intervalAverageWeekday) <- c("interval", "meanSteps", "partOfWeek")
View(intervalAverageWeekday)
View(intervalAverageWeekend)
allData <- rbind(intervalAverageWeekend, intervalAverageWeekday)
View(allData)
library(lattice)
xyplot(allData$meanSteps ~ allData$interval | allData$partOfWeek, layout = c(2,1))
xyplot(allData$meanSteps ~ allData$interval | allData$partOfWeek, layout = c(2,1), type = "l")
xyplot(allData$meanSteps ~ allData$interval | allData$partOfWeek, layout = c(2,1), type = "l", xlab = interval)
xyplot(allData$meanSteps ~ allData$interval | allData$partOfWeek, layout = c(2,1), type = "l", xlab = "interval")
xyplot(allData$meanSteps ~ allData$interval | allData$partOfWeek, layout = c(2,1), type = "l", xlab = "interval", ylab = "meanSteps")
xyplot(allData$meanSteps ~ allData$interval | allData$partOfWeek, layout = c(1,2), type = "l", xlab = "interval", ylab = "meanSteps")
